apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    field.cattle.io/description: A simple containerized listener for... proof? diagnostics?
      reasons.
  labels:
    workload.user.cattle.io/workloadselector: apps.deployment-default-helloflask
  name: helloflask
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: apps.deployment-default-helloflask
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        workload.user.cattle.io/workloadselector: apps.deployment-default-helloflask
      namespace: default
    spec:
      affinity: {}
      containers:
      - env:
        - name: MYSERVERNAME
          value: rke2cluster01.kenkl.org
        image: docker.io/kenkl/helloflask
        imagePullPolicy: Always
        name: container-1
        ports:
        - containerPort: 5000
          hostPort: 8080
          name: listening
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
